Hi, my name is Rene Lee and I’m a designer on the Apple Design team.
Today, I’m so excited to share how the new updates coming to iPad can elevate the design of your app.
 At its core, iPad is about simplicity.
 And iPadOS 26 is built on that solid foundation.
Multitasking is easy with a new gesture, that fluidly resizes any window.
In the toolbar, you’ll find the new Window Controls that become larger to reveal their functionality.
The new pointer is more precise and responsive.
And finally, there is the new menu bar, that you can populate with everything that makes your app unique and powerful.
With these new features, you now have all the building blocks that you’ll ever need to finally Elevate your iPad app.
 In this session, I’ll take you step by step through this journey, starting with your app’s navigation.
Then, we will look at how windows work when multitasking on iPad.
 Next, I’ll introduce iPad’s new pointer and updates to its hover effect.
Last, we’ll wrap up this session with the new menu bar on iPad.
Let’s get started with: Navigation.
 Elevating your iPad app starts with choosing its navigation pattern.
 The first option you have is a sidebar.
A sidebar, is ideal for apps that have numerous sub-views or deeply nested content like Mail.
Let’s take a look inside the sidebar in Mail: Mail uses the sidebar to list all the mailboxes and multiple accounts, exposing its content hierarchy to the top level.
 Mail on iPad is faster because its sidebar flattens its navigation.
 Let’s look at another example: Music.
 Instead of mailboxes, Music app has a set of tabs, library, and playlists.
 So in Music, these destinations are placed inside the sidebar which makes navigating very fast.
The sidebar in Music does have one more button that looks like a tab bar.
 When you tap it, the sidebar fluidly morphs.
.
.
 into a tab bar! A tab bar is a more compact and flexible navigation pattern.
Because it’s much smaller than a sidebar.
 Your app can show much more content than before, making it feel more immersive.
Morphing a tab bar back into a sidebar is also seamless.
 Tab bar’s fluidity lets people choose the navigation they prefer.
If you’re still not sure which navigation is best for your app, start with a tab bar.
A tab bar can easily morph into sidebar to help your app scale over time.
 Next, let’s see how each navigation adapts to smaller sizes.
When the iPad is rotated to portrait, a sidebar can respond by morphing back into a tab bar.
 But from a layout standpoint, the orientation change simply means that your app must adapt to a change in width.
When the navigation is adaptive, your app can reflow to any width.
You can extend this adaptivity to floating windows too, since they also result in a smaller width.
 If you use a tab bar, you’ll be able to adapt gracefully to any dimension.
Apps that don’t use a tab bar can also adapt its navigation by collapsing its columns down.
When adapting to size changes, make sure that any change in layout is non-destructive.
Resizing an app should not permanently alter its layout.
 Be opportunistic about reverting back to the starting state whenever possible.
Next, extend your content around navigation.
People come to your app for its content.
 So use as much of the display as possible to create the most immersive experience.
 You can start doing this by drawing content below the toolbar using the new 'scroll edge effect'.
Extending content is especially beneficial for floating windows that are smaller than a fullscreen app.
You can also extend content below the sidebar.
When content extends beyond its boundary like this, you can even tell which row has been scrolled, and by how much.
 To summarize: Choose the navigation pattern that best fits the content.
Consider starting with a tab bar.
 Adapt your navigation to smaller sizes.
And extend your content around the navigation.
Next, let’s get into windows.
 In iPadOS 26, there’s a new windowing system that’s somehow both simpler and more powerful! Every app that supports multitasking now shows a handle in the bottom right corner.
Dragging this will start resizing the app into a window that floats above your wallpaper.
On the top left of every window, you’ll find the new window controls.
 They become larger on tap, revealing their functionality.
 If you press and hold, they expand even further, showing a set of shortcuts that quickly create various window layouts.
 Window controls pack a lot of functionality and are central to how you multitask on iPad.
 Let’s dive a bit deeper into how they appear on every window.
 Window controls will appear on the leading edge of your app toolbar.
 Any existing controls will shift to the right to make room and avoid occlusion.
For apps that haven’t been updated to iPadOS 26, the system will increase the safe area above the toolbar and placethe window controls on its leading edge.
Please note that this placement above the toolbar only exists for compatibility.
Because it creates a permanent safe area directly above your toolbar, using this placement is suboptimal for maximizing content in your app.
 You should instead wrap your toolbar around window controls so they appear in line.
 When you wrap your toolbar around where window controls appear, you can avoid having to reserve a safe area.
The extra room you reclaim can then be spent on showing more content without increasing the window size.
Next, there’s an important change in how your app should handle opening new documents.
 If you open a document, its default app will launch above and open it in its window.
 It’s safe to assume that the app’s current state has some value until the app is hidden or deliberately closed.
 But what if you wanted to open a second document? Prior to multitasking-oriented workflows, if an app is then asked to open a different document, it would proceed to open the file in its one and only window, clearing any prior context in the process.
 This type of ‘Open in Place’ behavior is no longer recommended for apps that participate in multitasking.
 Going forward, your app should create a new window for each document.
 When multitasking is enabled, your app should open each document in their own window.
 This additive behavior is more helpful because windows persist until closed.
 But wouldn’t this behavior cause lots of windows to accumulate, and make it difficult to find my window? With the new additive windowing behavior, it’s very easy to start accumulating lots of windows over time.
To help you find your window, there’s a new section in the app menu with a list of all your open windows.
 But this list is not very helpful if window names are not descriptive.
 Therefore, it’s important for you to provide descriptive names for your app’s windows.
Name each window with a unique string, like the title of the document.
If your app provides a descriptive name for each window, it will be much easier to find a specific window.
To conclude this section: Wrap your toolbar around window controls.
Create a window for each document.
 And finally, provide descriptive names for your app’s windows.
Next, let’s see what changes are coming to the pointer on iPad.
Everything on iPad was designed for touch.
 So the original pointer was circular in shape, to best approximate your finger in both size and accuracy.
But under the hood, the pointer is actually capable of being much more precise than your finger.
So in iPadOS 26, the pointer is getting a new shape, unlocking its true potential.
The new pointer somehow feels more precise and responsive because it always tracks your input directly 1 to 1.
 In addition to its new shape, there are also changes coming to how the pointer behaves when hovering over buttons and controls.
 The new highlight effect is a liquid glass platter that materializes directly on top of the buttons you’re hovering over with your pointer.
Floating above the liquid glass controls, the highlight bends and refracts its underlying elements to indicate which button is currently selected.
When you hover over a liquid glass control that has more than one button, the highlight effect will appear to indicate which button you’re about to press with your pointer.
As you move across the cluster, the highlight will quickly catch up with your pointer, whenever its target changes.
The new highlight effect replaces the original hover effect where the pointer would morph into the highlight.
The new pointer will no longer magnetize or rubber band to any target and always track your input directly.
Make sure to test your app with the new pointer to identify unexpected results.
 Feel free to come back to this section for reference and guidance as you refine and polish your pointer interaction.
 Lastly, let’s take a look at the menu bar on iPad.
 The menu bar has always been a part of macOS, and shares many of its core principles with the menu bar on iPad.
 So in this section, we will focus on what makes the menu bar on iPad distinct.
 On iPad, you can reveal the menu bar by moving your pointer to the top edge.
 You can also swipe down with your finger.
In every menu bar, you’ll find the app menu, followed by default menus that the system provides, and custom menus provided by the app.
Going forward, every app on iPad is getting its own menu bar.
 So let’s get started with some tips for designing a great menu bar.
 First, organize your menu items.
Let me walk you through the process of organizing a custom menu.
 As an example, we'll use the Message menu here in Mail.
First thing you should do is to populate the menu with every action that relates to its name.
 You should order these actions by frequency of use, and not alphabetically.
 You should also group related actions into their own sections, to create further separation.
 If the menu starts becoming too long, you can move secondary actions into a submenu.
 Next, assign each item a symbol — ideally one that matches how they appear in your app.
 Finally, assign keyboard shortcuts to the most commonly performed actions.
 The result is a well-organized custom menu that not only contain individual commands, but also provides a mental map that people can internalize to better understand your app.
 Next, populate the View menu.
One of the menus that the system provides is the View menu.
 But it’s up to your app to populate it with useful actions.
 If your app is organized by tabs, they are great to include in the View menu.
Add your tabs as items in the View menu, and assign keyboard shortcuts to speed up tab switching in your app.
And now, you have a fully functional View menu! Another useful item is a navigation toggle.
 Any button that shows or hides the sidebar is a great addition to the View menu.
 Adding a sidebar toggle lets people quickly show or hide their navigation.
Next thing to keep in mind is to never hide any menus or items depending on the context of your app.
As people use your app, its context is always shifting.
 So when they open a menu, some items may appear dimmed, as they are not actionable.
 This, is very much by design.
 Menu items should always remain in the same place, even when inactive.
 They become fully opaque when they're actionable and dimmed when they're not.
 You might be wondering why inactive actions aren't simply hidden to save space.
Hiding menu items is not recommended because people will find this disorienting.
When a menu's content is always changing, people need to re-scan the entire menu each time they open it, as they can no longer fallback on their spatial memory.
 Make sure to keep the contents of your menu static, so that the menu bar is predictable and also aids in the discovery of new features each time people visit.
 Lastly, depending on the context, nothing inside a menu may be actionable.
Even when this is the case, avoid hiding menus in their entirety.
 The menu bar stops being predictable when entire menus disappear intermittently.
Make sure to keep the menus as well as their contents persistent so that people always get experience they expect.
Let’s review what we learned about the menu bar: Organize your menu items.
Populate the View menu with tabs and sidebar toggle.
Avoid hiding menus and menu items.
Keep these guidelines in mind as you design your app's menu bar for the best results! And with that we’ve covered everything I had for you today.
I reviewed how fluid navigation and additive multitasking make your iPad apps more powerful than ever.
 I also shared how the new pointer provides precision input and how the menu bar helps organize your app’s actions, making them easier to discover.
 If you’re interested in learning more about the new design system, I recommend checking out these other sessions.
As you start bringing these building blocks into your apps, I’m sure that they will add up to be more than the sum of their parts.
 I’m confident that you will take what you learned today and use them to truly transform and elevate the experience of your iPad app.
 Thanks for watching!